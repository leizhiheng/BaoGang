package com.baosteel.qcsh.database.adress;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import com.baosteel.qcsh.utils.StringUtils;
import com.common.utils.LogUtil;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

public class SQLOpearteImpl {
    private static String databasepath = "/data/data/%s/databases";
    private DBOpenHelper mDBOpenHelper;
    private SQLiteDatabase mSQLiteDatabase;
    private Context mContext;
    private final static String TABLE_NAME="t_city";//表名

    public SQLOpearteImpl(Context context) {
        this.mContext = context;
        copyData();
        mDBOpenHelper = new DBOpenHelper(context, null);
        mSQLiteDatabase = mDBOpenHelper.getWritableDatabase();
    }

    public void CloseDB() {
        mSQLiteDatabase.close();
    }

    public int checkIdByName(String cityName) {
        int id = -1;
        if (StringUtils.isBlank(cityName))
            return id;
        cityName = cityName.replaceAll("市", "");
        cityName = cityName.replaceAll("省", "");
        cityName = cityName.replaceAll("区", "");
        Cursor c = mSQLiteDatabase.query(TABLE_NAME, new String[]{"id", "parentid", "areaName", "rank"}, "areaName = ?",
                new String[]{cityName}, null, null, null);
        if (c.moveToFirst()) {
            id = c.getInt(c.getColumnIndex("id"));
        }
        c.close();
        return id;
    }


    /**
     * @param address  通过详细地址去查询CityId
     * @return CityId
     */
    public int checkIdByAddress(String address) {
        int id = -1;
        if (StringUtils.isBlank(address))
            return id;

        ArrayList<Area> provinces = checkAllProvince();

        for(Area area :provinces) {
            if(address.contains(area.name)) {
                ArrayList<Area> cities = checkAllCityById(area.RecNo);
                for (Area city :cities) {
                    if(address.contains(city.name)) {
                        id = city.RecNo;
                        return id;
//                        ArrayList<Area> districes = checkAllDistriceById(city.rowId);
//                        for (Area distriy : districes) {
//                            if(address.contains(distriy.areaName)) {
//                                id = distriy.rowId;
//                                return id;
//                            }
//                        }
                    }
                }
            }
        }
        return id;
    }

    public String checkIdsByAddress(String address) {
        String ids = "";
        if (StringUtils.isBlank(address))
            return ids;

        ArrayList<Area> provinces = checkAllProvince();
        for(Area area :provinces) {
            if(address.contains(area.name)) {
                ids += area.RecNo + ",";
                ArrayList<Area> cities = checkAllCityById(area.RecNo);
                for (Area city :cities) {
                    if(address.contains(city.name)) {
                        ids += city.RecNo + ",";
                        ArrayList<Area> districes = checkAllDistriceById(city.RecNo);
                        for (Area distriy : districes) {
                            if(address.contains(distriy.name)) {
                                ids += distriy.RecNo;
                                return ids;
                            }
                        }
                    }
                }
            }
        }

        return ids;
    }

    /**
     * 查询所有的省 包括直辖市和自治区特区
     *
     * @return
     */
    public ArrayList<Area> checkAllProvince() {
        ArrayList<Area> provinces = new ArrayList<Area>();
        Cursor c = mSQLiteDatabase.query(TABLE_NAME, new String[]{"id","parentid", "name", "rank"}, "rank = ?",
                new String[]{"1"}, null, null, null);
        while (c.moveToNext()) {
            Area temp = new Area();
            temp.RecNo = c.getInt(c.getColumnIndex("id"));
            temp.name = c.getString(c.getColumnIndex("name"));
            temp.parentid = c.getInt(c.getColumnIndex("parentid"));
            temp.rank = c.getInt(c.getColumnIndex("rank"));
            provinces.add(temp);
        }
        c.close();
        return provinces;
    }

    /**
     * 通过省Id查询下属市
     *
     * @param provinceId
     * @return
     */
    public ArrayList<Area> checkAllCityById(int provinceId) {
        ArrayList<Area> cities = new ArrayList<Area>();
        Cursor c = mSQLiteDatabase.query(TABLE_NAME, new String[]{"id", "parentid", "name", "rank"},
                "rank = ? and parentid = ?", new String[]{"2", String.valueOf(provinceId)}, null, null, null);
        while (c.moveToNext()) {
            Area temp = new Area();
            temp.RecNo = c.getInt(c.getColumnIndex("id"));
            temp.name = c.getString(c.getColumnIndex("name"));
            temp.parentid = c.getInt(c.getColumnIndex("parentid"));
            temp.rank = c.getInt(c.getColumnIndex("rank"));
            cities.add(temp);
        }
        c.close();
        return cities;
    }

    /**
     * 通过城市ID查询下属区
     *
     * @param cityId
     * @return
     */
    public ArrayList<Area> checkAllDistriceById(int cityId) {
        ArrayList<Area> districes = new ArrayList<Area>();
        Cursor c = mSQLiteDatabase.query(TABLE_NAME, new String[]{"id", "parentid", "name", "rank"},
                "rank = ? and parentid = ?", new String[]{"3", String.valueOf(cityId)}, null, null, null);
        while (c.moveToNext()) {
            Area temp = new Area();
            temp.RecNo = c.getInt(c.getColumnIndex("id"));
            temp.name = c.getString(c.getColumnIndex("name"));
            temp.parentid = c.getInt(c.getColumnIndex("parentid"));
            temp.rank = c.getInt(c.getColumnIndex("rank"));
            districes.add(temp);
        }
        c.close();
        return districes;
    }

    public void copyData() {

        if (null == mContext || null == databasepath) {
            return;
        }

        String dpath = String.format(databasepath, mContext.getApplicationInfo().packageName);
        String path = dpath + "/city_baogang.db";
        LogUtil.e("path", path);
        File file = new File(dpath);
        File fileData = new File(path);
        if (!fileData.exists()) {
            InputStream in = null;
            FileOutputStream out = null;
            try {
                if (!file.exists()) {
                    file.mkdir();
                }
                in = mContext.getAssets().open("city_baogang.db");
                out = new FileOutputStream(fileData);
                int length = -1;
                byte[] buf = new byte[1024];
                while ((length = in.read(buf)) != -1) {
                    out.write(buf, 0, length);
                }
                out.flush();
            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                if (in != null) {
                    try {
                        in.close();
                    } catch (IOException e1) {
                        e1.printStackTrace();
                    }
                }
                if (out != null) {
                    try {
                        out.close();
                    } catch (IOException e1) {
                        e1.printStackTrace();
                    }
                }
            }
        }
    }

    public class Area {
        public int RecNo;
        public String name;
        public int parentid;
        public int rank;
        public boolean isSelected;
    }
}
