package com.baosteel.qcsh.ui.fragment.home;

import java.util.ArrayList;
import java.util.List;

import org.json.JSONObject;

import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Toast;

import com.baosteel.qcsh.R;
import com.baosteel.qcsh.api.RequestCallback;
import com.baosteel.qcsh.api.RequestClient;
import com.baosteel.qcsh.constants.ConstantsAPI;
import com.baosteel.qcsh.model.BaoGangData;
import com.baosteel.qcsh.model.Brand;
import com.baosteel.qcsh.model.HotService;
import com.baosteel.qcsh.model.HotService.LayoutItem;
import com.baosteel.qcsh.model.ProductMaybeLike;
import com.baosteel.qcsh.ui.activity.common.SearchActivity;
import com.baosteel.qcsh.ui.activity.home.ClassRecomendActivity;
import com.baosteel.qcsh.ui.activity.home.GroupBuyActivity;
import com.baosteel.qcsh.ui.activity.home.HealthPointActivity;
import com.baosteel.qcsh.ui.activity.home.happyliving.HappyLivingActivity;
import com.baosteel.qcsh.ui.activity.home.healthy.HealthyHomeActivity;
import com.baosteel.qcsh.ui.activity.home.safetrip.SafeTripActivity;
import com.baosteel.qcsh.ui.activity.home.tongue.TongueActivity;
import com.baosteel.qcsh.ui.activity.home.tongue.TongueTypeActivity;
import com.baosteel.qcsh.ui.activity.home.travel.TravelActivity;
import com.baosteel.qcsh.ui.adapter.FragmentViewPagerAdapter;
import com.baosteel.qcsh.ui.adapter.HomeBrandAdapter.BrandItemClickListener;
import com.baosteel.qcsh.ui.fragment.product.GoodsDetailLikeFragment;
import com.baosteel.qcsh.ui.view.BrandRecommentView;
import com.baosteel.qcsh.ui.view.HotServiceView;
import com.baosteel.qcsh.ui.view.HotServiceView.IOnItemClickHotService;
import com.baosteel.qcsh.utils.JSONParseUtils;
import com.common.base.BaseFragment;
import com.common.utils.NetworkUtils;
import com.common.view.banner.BannerData;
import com.common.view.banner.BannerView;
import com.common.view.banner.IOnBannerItenClick;
import com.common.view.fastlink.FastLinkData;
import com.common.view.fastlink.FastLinkView;
import com.common.view.fastlink.LnkToolsGridViewAdapter.BackItemClickListener;
import com.common.view.pulltorefresh.PullToRefreshBase;
import com.common.view.pulltorefresh.PullToRefreshBase.Mode;
import com.common.view.pulltorefresh.PullToRefreshBase.OnRefreshListener2;
import com.common.view.pulltorefresh.PullToRefreshScrollView;
import com.common.view.pulltorefresh.Utils;
import com.common.view.scrolllayout.PageControlView;
import com.common.view.scrolllayout.ScrollLayout;
import com.common.view.viewflow.CircleFlowIndicator;
import com.common.view.viewflow.ViewFlow;

/**
 * 首页
 * 
 * @author 刘远祺
 * 
 * @todo TODO
 * 
 * @date 2015-8-27
 */
public class HomeFragment extends BaseFragment implements IOnBannerItenClick, BackItemClickListener, 
OnClickListener, BrandItemClickListener, IOnItemClickHotService, OnRefreshListener2 {
	
	/**下拉刷新scrollview**/
	private PullToRefreshScrollView scrollview;
	
	/**Banner轮播图**/
	private BannerView bannerView;
	
	/**快速导航**/
	private FastLinkView fastLinkView;

	/**品牌推荐**/
	private BrandRecommentView brandRecommentView;
	
	/**热门服务**/
	private HotServiceView hotServiceView;
	
	/**猜你喜欢**/
	private LinearLayout maybeLikeLayout;
	private ViewPager mebyLikeViewPager;
	
	/**搜索框**/
	private View mViewSearch;
	
	/**猜你喜欢适配器**/
	private FragmentViewPagerAdapter likeViewpagerAdapter;
	
	
	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		fragmentView = inflater.inflate(R.layout.fragment_home, null);
		return fragmentView;
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);

		//初始化控件
		initView();
		
		//初始化数据
		initData();

		//加载首页数据
		loadData();
	}


	@Override
	public void onPullDownToRefresh(PullToRefreshBase refreshView) {
		if (!NetworkUtils.isNetworkAvailable(getActivity())) {
			
			Toast.makeText(getActivity(), "网络故障，请先检查网络连接!", Toast.LENGTH_LONG).show();
			
			scrollview.onRefreshComplete();
			return;
		}
		
		//重新加载全部数据
		loadData();
	}

	@Override
	public void onPullUpToRefresh(PullToRefreshBase refreshView) {
		
	}

	
	private void initView(){
		
		//下拉刷新滚动条
		scrollview = (PullToRefreshScrollView) findViewById(R.id.home_body_scrollview);
		scrollview.setMode(Mode.PULL_FROM_START);
		scrollview.getLoadingLayoutProxy().setLastUpdatedLabel(Utils.getCurrTiem());
		scrollview.getLoadingLayoutProxy().setPullLabel("往下拉更新数据...");
		scrollview.getLoadingLayoutProxy().setRefreshingLabel("正在载入中...");
		scrollview.getLoadingLayoutProxy().setReleaseLabel("放开更新数据...");
		scrollview.setOnRefreshListener(this);
		//显示ScrollView顶部
		scrollview.post(new Runnable() {
			
			@Override
			public void run() {
				scrollview.scrollTo(0, 0);
			}
		});
		
		//轮播图
		ViewFlow viewFlow = (ViewFlow) findViewById(R.id.mHomeViewflow);// 获得viewFlow对象
		CircleFlowIndicator indic = (CircleFlowIndicator) findViewById(R.id.mHomeViewflowindic); // viewFlow下的indic
		bannerView = new BannerView(mContext, viewFlow, indic);
		bannerView.setOnItemClickListener(this);
		
		//快速导航图
		ScrollLayout mScrollLayout = (ScrollLayout) findViewById(R.id.ScrollLayoutTest);
		PageControlView pageControl = (PageControlView) findViewById(R.id.pageControl);
		fastLinkView = new FastLinkView(mContext, mScrollLayout, pageControl);
		fastLinkView.setOntemClickListener(this);
		
		//团购产品,健康单购买产品
		findViewById(R.id.home_team_product_ll).setOnClickListener(this);
		findViewById(R.id.home_buy_product_ll).setOnClickListener(this);
		
		//品类推荐
		ViewPager viewpager = (ViewPager)findViewById(R.id.brand_recommend_viewpager);
		brandRecommentView = new BrandRecommentView(mContext, viewpager);
		brandRecommentView.setOntemClickListener(this);
		
		//热门服务
		LinearLayout hotView = (LinearLayout)findViewById(R.id.home_hot_service_content_ll);
		hotServiceView = new HotServiceView(mContext, hotView);
		hotServiceView.setOnItemClickListener(this);
		
		//猜你喜欢
		maybeLikeLayout = (LinearLayout)findViewById(R.id.mebylike_layout);
		mebyLikeViewPager = (ViewPager) findViewById(R.id.mebyLikeViewPager);
        
        //搜索框
        mViewSearch = findViewById(R.id.ab_search);
        mViewSearch.setOnClickListener(this);
	}
	
	/**
	 * 初始化数据
	 */
	private void initData() {
		
	}

	/**
	 * 判断数据加载完成
	 */
	private void checkToLoadComplete(){
		if(requestCount == responseCount){
			//请求数 = 响应数，则代表首页数据全部加载完成
			scrollview.onRefreshComplete();
		}
	}
	
	//http请求数
	private int requestCount = 0;
	
	//http响应数
	private int responseCount= 0;
	
	
	/**加载数据**/
	public void loadData() {
		
		//请求数,响应数,清空
		requestCount = 0;
		responseCount = 0;
		
		//加载Banner数据
		queryAPPBanner();
		requestCount++;
		
		//查询FastLink数据
		queryAppClassify();
		requestCount++;
		
		//查询品类推荐数据
		queryAppGoodsTypeSuggest();
		requestCount++;
		
		//查询热门服务
		queryAppHotService();
		requestCount++;
		
		//猜你喜欢
		queryAppGuessYouLike();
		requestCount++;
		
	}
	
	/**
	 * 加载猜你喜欢
	 */
	private void queryAppGuessYouLike(){
		
		String userId = BaoGangData.getInstance().getUserId();
		RequestClient.queryAppGuessYouLike(mContext, userId, new RequestCallback<JSONObject>() {
			
			@Override
			public void onFinish() {
				super.onFinish();
				responseCount++;
				checkToLoadComplete();
				
			}
			
			@Override
			public void onResponse(JSONObject response) {
				if (JSONParseUtils.isSuccessRequest(mContext, response)) {

					// 解析显示数据
					List<ProductMaybeLike> listLikes = JSONParseUtils.appGuessYouLike(response);
					fillMayLike(listLikes);
				}
			}
		});
	}
	
	/**
	 * 加载热门服务
	 */
	private void queryAppHotService(){
		RequestClient.queryAppHotService(mContext, new RequestCallback<JSONObject>() {
			
			
			@Override
			public void onFinish() {
				super.onFinish();
				responseCount++;
				checkToLoadComplete();
				
			}
			
			@Override
			public void onResponse(JSONObject response) {
				
				if(JSONParseUtils.isSuccessRequest(mContext, response)){
					
					//解析显示数据
					List<HotService> hotList = new ArrayList<HotService>();
					HotService hotService = JSONParseUtils.getHotServiceData(response);
					hotList.add(hotService);
					hotServiceView.refreshData(hotList);
					
				}
			}
		});
	}
	
	
	/**
	 * 加载品类推荐
	 */
	private void queryAppGoodsTypeSuggest(){
		RequestClient.queryAppGoodsTypeSuggest(mContext, new RequestCallback<JSONObject>() {
			
			@Override
			public void onFinish() {
				super.onFinish();
				responseCount++;
				checkToLoadComplete();
				
			}
			
			@Override
			public void onResponse(JSONObject response) {
				
				if(JSONParseUtils.isSuccessRequest(mContext, response)){
					
					//解析数据
					brandRecommentView.refreshData(JSONParseUtils.getBrandDatas(response), 4);
				}
			}
		});
	}
	
	/**
	 * 加载Banner滑动图
	 */
	private void queryAPPBanner(){
		
		RequestClient.queryAPPBanner(mContext, ConstantsAPI.ModuleId_Home, 1, new RequestCallback<JSONObject>() {
			
			@Override
			public void onFinish() {
				super.onFinish();
				responseCount++;
				checkToLoadComplete();
				
			}
			
			@Override
			public void onResponse(JSONObject response) {
				
				if(JSONParseUtils.isSuccessRequest(mContext, response)){
					
					//解析Banner数据
					bannerView.refreshData(JSONParseUtils.getBannerDatas(response));
				}
			}
		});
	}
	
	/**
	 * 加载7个宝数据
	 */
	private void queryAppClassify() {

		RequestClient.queryAppClassify(mContext, -1, new RequestCallback<JSONObject>() {

			@Override
			public void onFinish() {
				super.onFinish();
				responseCount++;
				checkToLoadComplete();
				
			}
			
			@Override
			public void onResponse(JSONObject response) {
				
				if (JSONParseUtils.isSuccessRequest(mContext, response)) {

					// 解析七个宝数据
					fastLinkView.refreshData(JSONParseUtils.getFastLinkDatas(response));
				}
			}
		});
	}
	
	
	@Override
	public void onBannerItemClick(BannerData data, int position) {
		showToast("点击了第"+position+"项数据");
	}

	@Override
	public void onFastLinkItemClick(FastLinkData bean) {
		showToast("点击了第"+bean.getName()+"项数据");
		switch (bean.getId()) {
		
			case 1:
				/**健康宝**/
				startActivity(new Intent(getActivity(), HealthyHomeActivity.class));
				
				break;
			case 2:
				/**旅行宝**/
				startActivity(new Intent(getActivity(), TravelActivity.class));
				break;
			case 3:
				/**安程宝**/
				startActivity(new Intent(getActivity(), SafeTripActivity.class));
				
				break;
			case 4:
				/**乐居宝**/
				startActivity(new Intent(getActivity(), HappyLivingActivity.class));
				break;
			case 5:
				/**欢愉宝**/
				
				break;
			case 6:
				/**趣学宝**/
				break;
			case 7:
				/**舌尖宝**/
				startActivity(new Intent(getActivity(), TongueActivity.class).putExtra("type",bean.getId()));
				break;
			case 8:
				/**排序按钮**/
				
				break;
		}
	}
	
	@Override
	public void onBrandItemClick(Brand bean) {
		
		//品类推荐点击事件
		Intent intent = new Intent(getActivity(), TongueTypeActivity.class);
		intent.putExtra(TongueTypeActivity.EXTRA_TYPE_ID, bean.getBrandId());
		intent.putExtra(TongueTypeActivity.EXTRA_TYPE_LEVEL, bean.getLevel());
		intent.putExtra(TongueTypeActivity.EXTRA_MODE_ID, 1);
		intent.putExtra(ClassRecomendActivity.TITLE, bean.getBrandTitle());
		startActivity(intent);
		
	}
	
	@Override
	public void onItemClickHotService(LayoutItem imgItem) {
		
		//热门服务点击事件
		showToast(imgItem.forwardModuleName);
		
	}
	
	/**
	 * 点击事件
	 * @param view
	 */
	@Override
	public void onClick(View view){
		switch (view.getId()) {
		case R.id.home_team_product_ll:
			
			//团购产品
			showToast("功能正在开发中...");
//			startActivity(new Intent(getActivity(), GroupBuyActivity.class));
			
			break;

		case R.id.home_buy_product_ll:
			
			//健康单购买产品
			showToast("功能正在开发中...");
//			startActivity(new Intent(getActivity(), HealthPointActivity.class));
			
			break;
			
		case R.id.ab_search:
			
			//搜索
			startActivity(new Intent(getActivity(), SearchActivity.class));
			
			break;
			
		}
	}

	/**
     * 填充猜你喜欢的数据
     */
    private void fillMayLike(List<ProductMaybeLike> listLikes) {
        List<ProductMaybeLike> listTemp = new ArrayList<ProductMaybeLike>();
        if (listLikes != null) {
        	List<Fragment> listLikeFragments = new ArrayList<Fragment>();
            for (int i = 0; i < listLikes.size(); i++) {
                if (listTemp.size() < 4) {
                    listTemp.add(listLikes.get(i));
                    if (i >= listLikes.size() - 1) {
                        List<ProductMaybeLike> listItems = new ArrayList<ProductMaybeLike>();
                        listItems.addAll(listTemp);
                        GoodsDetailLikeFragment fragment = new GoodsDetailLikeFragment();
                        fragment.setData(listItems);
                        listLikeFragments.add(fragment);
                    }
                } else {
                    List<ProductMaybeLike> listItems = new ArrayList<ProductMaybeLike>();
                    listItems.addAll(listTemp);
                    GoodsDetailLikeFragment fragment = new GoodsDetailLikeFragment();
                    fragment.setData(listItems);
                    listLikeFragments.add(fragment);
                    listTemp = new ArrayList<ProductMaybeLike>();
                    listTemp.add(listLikes.get(i));
                }
            }

            //通知刷新
            mebyLikeViewPager = (ViewPager) findViewById(R.id.mebyLikeViewPager);
            mebyLikeViewPager.setOffscreenPageLimit(2);
            likeViewpagerAdapter = new FragmentViewPagerAdapter(getFragmentManager(), listLikeFragments);
            mebyLikeViewPager.setAdapter(likeViewpagerAdapter);
           
            //显示猜你喜欢布局
            if (listLikes.size() > 0) {
            	maybeLikeLayout.setVisibility(View.VISIBLE);
            } else {
            	maybeLikeLayout.setVisibility(View.GONE);
            }
        }
    }
}
