package com.baosteel.qcsh.ui.fragment.product;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.support.annotation.Nullable;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.GridView;
import android.widget.ListView;

import com.baosteel.qcsh.R;
import com.baosteel.qcsh.database.bean.TopProduct;
import com.baosteel.qcsh.ui.activity.prodcut.TongueTipProductDetailsActivity;
import com.baosteel.qcsh.ui.adapter.ProductListAdapter;
import com.baosteel.qcsh.ui.adapter.TopProdectAdapter;
import com.common.base.BaseFragment;
import com.common.view.pulltorefresh.PullToRefreshBase;
import com.common.view.pulltorefresh.PullToRefreshBase.Mode;
import com.common.view.pulltorefresh.PullToRefreshBase.OnRefreshListener;
import com.common.view.pulltorefresh.PullToRefreshGridView;
import com.common.view.pulltorefresh.PullToRefreshListView;

public class ProductListFragment extends BaseFragment{
	
	private PullToRefreshListView mRefreshListView;
	private ListView mListView;//PullToRefreshListView中封装的ListView对象
	
	private PullToRefreshGridView mRefreshGridView;
	private GridView mGridView;//PullToRefreshGridView中封装的GridView对象
	
	/** 列表Adapter */
	private ProductListAdapter mListAdapter;
	/** 网格Adapter */
	private TopProdectAdapter mGridAdapter;
	
	
	/** 显示数据 */
	private List<TopProduct> mDatas;
	
	private int mCurPage;
	private int mPageSize = 6;
	
	/** 顶部Item的position， 用于显示模式切换时，定位到之前模式浏览的Item*/
	private int mTopIndex;
	
	private Handler mHandler = new Handler();
	
	/**
	 * 
	 * @description ListView 和 GridView上拉加载的时候回调该方法
	 * @author blue
	 * @Time 2015-9-24
	 *
	 */
	public interface OnDataRefreshListener {
		void onRefresh();
	}
	private OnDataRefreshListener mOnRefreshListener;
	public void setOnRefreshListener(OnDataRefreshListener listener) {
		this.mOnRefreshListener = listener;
	}
	
	@Override
	public View onCreateView(LayoutInflater inflater,
			@Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
		fragmentView = inflater.inflate(R.layout.fragment_product_list, null);
		return fragmentView;
	}
	
	@Override
	public void onActivityCreated(@Nullable Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
		
		initData();
		initView();
		
	}
	
	private void initData() {
		mDatas = new ArrayList<TopProduct>();
		mGridAdapter = new TopProdectAdapter(getActivity(), mDatas);
		mListAdapter = new ProductListAdapter(mContext, mDatas);
	}
	
	private void initView() {
		mRefreshListView = (PullToRefreshListView) findViewById(R.id.refresh_listview);
		mListView = mRefreshListView.getRefreshableView();
		mRefreshListView.setMode(Mode.PULL_FROM_END);
		mRefreshListView.setAdapter(mListAdapter);
		mRefreshListView.setOnRefreshListener(new OnRefreshListener<ListView>() {

			@Override
			public void onRefresh(PullToRefreshBase<ListView> refreshView) {
				/*
				 * 将上拉加载事件通知到外部，由外部进行具体的操作
				 */
				if (mOnRefreshListener != null) {
					mOnRefreshListener.onRefresh();
				}
			}
		});
		mListView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				
				//商品详情跳转
				position -= mRefreshListView.getHeadViewCount();
				TopProduct product = (TopProduct)mListAdapter.getItem(position);
				startToProductDetailActivity(product.getId(), product.getGoods_genre());
			}
		});
		
		mRefreshGridView = (PullToRefreshGridView) findViewById(R.id.refresh_gridview);
		mGridView = mRefreshGridView.getRefreshableView();
		mRefreshGridView.setMode(Mode.PULL_FROM_END);
		mRefreshGridView.setAdapter(mGridAdapter);
		mRefreshGridView.setOnRefreshListener(new OnRefreshListener<GridView>() {

			@Override
			public void onRefresh(PullToRefreshBase<GridView> refreshView) {
				/*
				 * 将上拉加载事件通知到外部，由外部进行具体的操作
				 */
				if (mOnRefreshListener != null) {
					mOnRefreshListener.onRefresh();
				}
			}
		});
		mGridView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
				
				//商品详情跳转
				TopProduct product = (TopProduct)mGridAdapter.getItem(position);
				startToProductDetailActivity(product.getId(), product.getGoods_genre());
			}
		});
		
		//显示为网格模式
		showMode(true);
		
	}
	
	public void setData(List<TopProduct> datas) {
		if (mDatas == null) {
			mDatas = new ArrayList<TopProduct>();
		}
		
		mDatas.addAll(datas);
		
		/*
		 * 刷新列表
		 */
		mListAdapter.notifyDataSetChanged();
		mGridAdapter.notifyDataSetChanged();
		
		/*
		 * 隐藏FooterView
		 */
		mRefreshListView.onRefreshComplete();
		mRefreshGridView.onRefreshComplete();
		
	}
	
	/**
	 * 清除数据，以便加载新数据
	 * @Description TODO
	 * @Author blue
	 * @Time 2015-10-12
	 */
	public void clearData() {
		mDatas.clear();
	}
	
	public List<TopProduct> getData() {
		return mDatas;
	}
	
	/**
	 * 
	 * @Description 设置列表的刷新模式
	 * @Author blue
	 * @Time 2015-10-10
	 */
	public void setRefreshMode(Mode mode) {
		mRefreshGridView.setMode(mode);
		mRefreshListView.setMode(mode);
	}
	
	/**
	 * 
	 * @Description 切换显示模式
	 * @Author blue
	 * @Time 2015-9-23
	 */
	public void showMode(boolean showGridMode) {
		if (showGridMode) {//切换到网格模式
			/*
			 * 获取之前列表模式中显示的第一个Item 位置
			 */
			mTopIndex = mListView.getFirstVisiblePosition();
		
			setGridSelection(mTopIndex);
			
			//切换可见性
			mRefreshGridView.setVisibility(View.VISIBLE);
			mRefreshListView.setVisibility(View.INVISIBLE);
			
		} else {
			
			mTopIndex = mGridView.getFirstVisiblePosition();
			Log.d("zhiheng", "GridView top index = "+mTopIndex);
			
			setListSelection(mTopIndex);
			
			mRefreshGridView.setVisibility(View.INVISIBLE);
			mRefreshListView.setVisibility(View.VISIBLE);
			
		}
	}
	
	public void setListSelection(int position) {
//		mRefreshListView.requestFocusFromTouch();
//		mListView.requestFocusFromTouch();
//		mListView.setSelection(mTopIndex);
		mListView.post(new Runnable() {
			
			@Override
			public void run() {
				mListView.setSelection(mTopIndex);
			}
		});
		mListAdapter.notifyDataSetChanged();
	}
	
	
	public void setGridSelection(int position) {
		//定位之前模式浏览中显示的第一个商品
//		mGridView.requestFocusFromTouch();
//		mGridView.setSelection(mTopIndex);
		mGridView.post(new Runnable() {
			
			@Override
			public void run() {
				mGridView.setSelection(mTopIndex);
			}
		});
		
		mGridAdapter.notifyDataSetChanged();
	}
	
}
